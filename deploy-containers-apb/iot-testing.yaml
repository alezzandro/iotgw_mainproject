apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: iot-testing
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: amq63-persistent
      application: broker
      template: amq63-persistent
      xpaas: 1.4.8
    name: broker-amq
  spec:
    replicas: 1
    selector:
      deploymentConfig: broker-amq
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 0
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          application: broker
          deploymentConfig: broker-amq
        name: broker-amq
      spec:
        containers:
        - env:
          - name: AMQ_USER
            value: admin
          - name: AMQ_PASSWORD
            value: change12_me
          - name: AMQ_TRANSPORTS
            value: openwire, mqtt
          - name: AMQ_QUEUES
            value: message.to.rules, message.to.datacenter
          - name: AMQ_TOPICS
          - name: MQ_SERIALIZABLE_PACKAGES
          - name: AMQ_SPLIT
            value: "true"
          - name: AMQ_MESH_DISCOVERY_TYPE
            value: dns
          - name: AMQ_MESH_SERVICE_NAME
            value: broker-amq-mesh
          - name: AMQ_MESH_SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: AMQ_STORAGE_USAGE_LIMIT
            value: 1 gb
          - name: AMQ_QUEUE_MEMORY_LIMIT
          image: registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db
          imagePullPolicy: Always
          name: broker-amq
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 1883
            name: mqtt
            protocol: TCP
          - containerPort: 61613
            name: stomp
            protocol: TCP
          - containerPort: 61616
            name: tcp
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/amq/bin/readinessProbe.sh
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/amq/data
            name: broker-amq-pvol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: broker-amq-pvol
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - broker-amq
        from:
          kind: ImageStreamTag
          name: jboss-amq-63:1.3
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: amq63-persistent
      application: broker
      template: amq63-persistent
      xpaas: 1.4.8
    name: broker-drainer
  spec:
    replicas: 1
    selector:
      deploymentConfig: broker-drainer
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          application: broker
          deploymentConfig: broker-drainer
        name: broker-drainer
      spec:
        containers:
        - command:
          - /opt/amq/bin/drain.sh
          env:
          - name: AMQ_USER
            value: admin
          - name: AMQ_PASSWORD
            value: change12_me
          - name: AMQ_MESH_SERVICE_NAME
            value: broker-amq-mesh
          - name: AMQ_MESH_SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db
          imagePullPolicy: Always
          name: broker-drainer
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 61616
            name: tcp
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/amq/data
            name: broker-amq-pvol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: broker-amq-pvol
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - broker-drainer
        from:
          kind: ImageStreamTag
          name: jboss-amq-63:1.3
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: businessrules
    name: businessrules
  spec:
    replicas: 1
    selector:
      deploymentconfig: businessrules
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: businessrules
          deploymentconfig: businessrules
      spec:
        containers:
        - env:
          - name: JAVA_APP_JAR
            value: rules-jar-with-dependencies.jar
          - name: SOURCE_AMQ_BROKER
            value: tcp://broker-amq-mesh:61616
          - name: SOURCE_QUEUE
            value: message.to.rules
          - name: SOURCE_BROKER_ADMIN_UID
            value: admin
          - name: SOURCE_BROKER_ADMIN_PASSWD
            value: change12_me
          - name: TARGET_AMQ_BROKER
            value: tcp://broker-amq-mesh:61616
          - name: TARGET_QUEUE
            value: message.to.datacenter
          - name: TARGET_BROKER_ADMIN_UID
            value: admin
          - name: TARGET_BROKER_ADMIN_PASSWD
            value: change12_me
          image: 172.30.1.1:5000/iot-testing/businessrules@sha256:96c3d3b5481b28093127353a36104451ded3f57702a0e969f121c1f2dd4bbcb8
          imagePullPolicy: Always
          name: businessrules
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - businessrules
        from:
          kind: ImageStreamTag
          name: businessrules:latest
          namespace: iot-testing
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: routingservice
    name: routingservice
  spec:
    replicas: 1
    selector:
      deploymentconfig: routingservice
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: routingservice
          deploymentconfig: routingservice
      spec:
        containers:
        - env:
          - name: SOURCE_AMQ_BROKER
            value: tcp://broker-amq-mesh:61616
          - name: SOURCE_BROKER_ADMIN_UID
            value: admin
          - name: SOURCE_BROKER_ADMIN_PASSWD
            value: change12_me
          - name: BROKER_AMQ_MQTT_HOST
            value: broker-amq-mqtt
          image: 172.30.1.1:5000/iot-testing/routingservice@sha256:a0ad043afb73edf7ee7cd1801ddae7a202eac6a36e0ed0847ecd7d9d859097c5
          imagePullPolicy: Always
          name: routingservice
          ports:
          - containerPort: 8778
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - routingservice
        from:
          kind: ImageStreamTag
          name: routingservice:latest
          namespace: iot-testing
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: software-sensor
    name: software-sensor
  spec:
    replicas: 1
    selector:
      deploymentconfig: software-sensor
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: software-sensor
          deploymentconfig: software-sensor
      spec:
        containers:
        - env:
          - name: deviceType
            value: temperature
          - name: deviceID
            value: "4711"
          - name: initialValue
            value: "70"
          - name: count
            value: "1000"
          - name: waitTime
            value: "1"
          - name: receiverURL
            value: broker-amq-mqtt
          - name: brokerUID
            value: admin
          - name: brokerPassword
            value: change12_me
          - name: highWater
            value: "800"
          - name: lowWater
            value: "200"
          - name: JAVA_OPTIONS
            value: -DhighWater=800 -DlowWater=200 -DbrokerUID=admin -DbrokerPassword=change12_me
              -DreceiverURL=broker-amq-mqtt -DdeviceType=temperature -DdeviceID=4711
              -DinitialValue=70 -Dcount=1000 -DwaitTime=1
          - name: JAVA_APP_JAR
            value: softwareSensor-jar-with-dependencies.jar
          image: 172.30.1.1:5000/iot-testing/software-sensor@sha256:5cae52a43658e6a18d0e90a76e8c31f8fa63e95d542326b1d5838fa99aaa04a2
          imagePullPolicy: Always
          name: software-sensor
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - software-sensor
        from:
          kind: ImageStreamTag
          name: software-sensor:latest
          namespace: iot-testing
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 2
    labels:
      app: businessrules
    name: businessrules
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.1.1:5000/iot-testing/businessrules:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 2
    labels:
      app: routingservice
    name: routingservice
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.1.1:5000/iot-testing/routingservice:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 2
    labels:
      app: software-sensor
    name: software-sensor
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.1.1:5000/iot-testing/software-sensor:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: broker-amq
      openshift.io/deployment.name: broker-amq-1
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: broker-amq-1-
    labels:
      application: broker
      deployment: broker-amq-1
      deploymentConfig: broker-amq
      deploymentconfig: broker-amq
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: broker-amq-1
      uid: b0e64943-5cff-11e8-bf27-000d3a189887
  spec:
    containers:
    - env:
      - name: AMQ_USER
        value: admin
      - name: AMQ_PASSWORD
        value: change12_me
      - name: AMQ_TRANSPORTS
        value: openwire, mqtt
      - name: AMQ_QUEUES
        value: message.to.rules, message.to.datacenter
      - name: AMQ_TOPICS
      - name: MQ_SERIALIZABLE_PACKAGES
      - name: AMQ_SPLIT
        value: "true"
      - name: AMQ_MESH_DISCOVERY_TYPE
        value: dns
      - name: AMQ_MESH_SERVICE_NAME
        value: broker-amq-mesh
      - name: AMQ_MESH_SERVICE_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: AMQ_STORAGE_USAGE_LIMIT
        value: 1 gb
      - name: AMQ_QUEUE_MEMORY_LIMIT
      image: registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db
      imagePullPolicy: Always
      name: broker-amq
      ports:
      - containerPort: 8778
        name: jolokia
        protocol: TCP
      - containerPort: 5672
        name: amqp
        protocol: TCP
      - containerPort: 1883
        name: mqtt
        protocol: TCP
      - containerPort: 61613
        name: stomp
        protocol: TCP
      - containerPort: 61616
        name: tcp
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/amq/bin/readinessProbe.sh
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000170000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/amq/data
        name: broker-amq-pvol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-d4n5z
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-tms4g
    nodeName: localhost
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000170000
      seLinuxOptions:
        level: s0:c13,c7
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 60
    volumes:
    - emptyDir: {}
      name: broker-amq-pvol
    - name: default-token-d4n5z
      secret:
        defaultMode: 420
        secretName: default-token-d4n5z
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: broker-drainer
      openshift.io/deployment.name: broker-drainer-1
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: broker-drainer-1-
    labels:
      application: broker
      deployment: broker-drainer-1
      deploymentConfig: broker-drainer
      deploymentconfig: broker-drainer
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: broker-drainer-1
      uid: b0ecdf5e-5cff-11e8-bf27-000d3a189887
  spec:
    containers:
    - command:
      - /opt/amq/bin/drain.sh
      env:
      - name: AMQ_USER
        value: admin
      - name: AMQ_PASSWORD
        value: change12_me
      - name: AMQ_MESH_SERVICE_NAME
        value: broker-amq-mesh
      - name: AMQ_MESH_SERVICE_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db
      imagePullPolicy: Always
      name: broker-drainer
      ports:
      - containerPort: 8778
        name: jolokia
        protocol: TCP
      - containerPort: 61616
        name: tcp
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000170000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/amq/data
        name: broker-amq-pvol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-d4n5z
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-tms4g
    nodeName: localhost
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000170000
      seLinuxOptions:
        level: s0:c13,c7
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 60
    volumes:
    - emptyDir: {}
      name: broker-amq-pvol
    - name: default-token-d4n5z
      secret:
        defaultMode: 420
        secretName: default-token-d4n5z
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: businessrules
      openshift.io/deployment.name: businessrules-1
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: businessrules-1-
    labels:
      app: businessrules
      deployment: businessrules-1
      deploymentconfig: businessrules
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: businessrules-1
      uid: 08a685d1-5d13-11e8-92eb-000d3a189887
  spec:
    containers:
    - env:
      - name: JAVA_APP_JAR
        value: rules-jar-with-dependencies.jar
      - name: SOURCE_AMQ_BROKER
        value: tcp://broker-amq-mesh:61616
      - name: SOURCE_QUEUE
        value: message.to.rules
      - name: SOURCE_BROKER_ADMIN_UID
        value: admin
      - name: SOURCE_BROKER_ADMIN_PASSWD
        value: change12_me
      - name: TARGET_AMQ_BROKER
        value: tcp://broker-amq-mesh:61616
      - name: TARGET_QUEUE
        value: message.to.datacenter
      - name: TARGET_BROKER_ADMIN_UID
        value: admin
      - name: TARGET_BROKER_ADMIN_PASSWD
        value: change12_me
      image: 172.30.1.1:5000/iot-testing/businessrules@sha256:96c3d3b5481b28093127353a36104451ded3f57702a0e969f121c1f2dd4bbcb8
      imagePullPolicy: Always
      name: businessrules
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8443
        protocol: TCP
      - containerPort: 8778
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000170000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-d4n5z
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-tms4g
    nodeName: localhost
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000170000
      seLinuxOptions:
        level: s0:c13,c7
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-d4n5z
      secret:
        defaultMode: 420
        secretName: default-token-d4n5z
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: routingservice
      openshift.io/deployment.name: routingservice-1
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: routingservice-1-
    labels:
      app: routingservice
      deployment: routingservice-1
      deploymentconfig: routingservice
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: routingservice-1
      uid: b5d8583b-5d13-11e8-92eb-000d3a189887
  spec:
    containers:
    - env:
      - name: SOURCE_AMQ_BROKER
        value: tcp://broker-amq-mesh:61616
      - name: SOURCE_BROKER_ADMIN_UID
        value: admin
      - name: SOURCE_BROKER_ADMIN_PASSWD
        value: change12_me
      - name: BROKER_AMQ_MQTT_HOST
        value: broker-amq-mqtt
      image: 172.30.1.1:5000/iot-testing/routingservice@sha256:a0ad043afb73edf7ee7cd1801ddae7a202eac6a36e0ed0847ecd7d9d859097c5
      imagePullPolicy: Always
      name: routingservice
      ports:
      - containerPort: 8778
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000170000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-d4n5z
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-tms4g
    nodeName: localhost
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000170000
      seLinuxOptions:
        level: s0:c13,c7
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-d4n5z
      secret:
        defaultMode: 420
        secretName: default-token-d4n5z
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: software-sensor
      openshift.io/deployment.name: software-sensor-1
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: software-sensor-1-
    labels:
      app: software-sensor
      deployment: software-sensor-1
      deploymentconfig: software-sensor
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: software-sensor-1
      uid: 1f134b09-5d14-11e8-92eb-000d3a189887
  spec:
    containers:
    - env:
      - name: deviceType
        value: temperature
      - name: deviceID
        value: "4711"
      - name: initialValue
        value: "70"
      - name: count
        value: "1000"
      - name: waitTime
        value: "1"
      - name: receiverURL
        value: broker-amq-mqtt
      - name: brokerUID
        value: admin
      - name: brokerPassword
        value: change12_me
      - name: highWater
        value: "800"
      - name: lowWater
        value: "200"
      - name: JAVA_OPTIONS
        value: -DhighWater=800 -DlowWater=200 -DbrokerUID=admin -DbrokerPassword=change12_me
          -DreceiverURL=broker-amq-mqtt -DdeviceType=temperature -DdeviceID=4711 -DinitialValue=70
          -Dcount=1000 -DwaitTime=1
      - name: JAVA_APP_JAR
        value: softwareSensor-jar-with-dependencies.jar
      image: 172.30.1.1:5000/iot-testing/software-sensor@sha256:5cae52a43658e6a18d0e90a76e8c31f8fa63e95d542326b1d5838fa99aaa04a2
      imagePullPolicy: Always
      name: software-sensor
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8443
        protocol: TCP
      - containerPort: 8778
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000170000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-d4n5z
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-tms4g
    nodeName: localhost
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000170000
      seLinuxOptions:
        level: s0:c13,c7
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-d4n5z
      secret:
        defaultMode: 420
        secretName: default-token-d4n5z
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-05-21 14:03:27 +0000 UTC
      openshift.io/deployer-pod.created-at: 2018-05-21 14:03:09 +0000 UTC
      openshift.io/deployer-pod.name: broker-amq-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: broker-amq
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"broker-amq","namespace":"iot-testing","selfLink":"/apis/apps.openshift.io/v1/namespaces/iot-testing/deploymentconfigs/broker-amq","uid":"b0131396-5cff-11e8-bf27-000d3a189887","resourceVersion":"112407","generation":2,"creationTimestamp":"2018-05-21T14:03:07Z","labels":{"app":"amq63-persistent","application":"broker","template":"amq63-persistent","xpaas":"1.4.8"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":0},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["broker-amq"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"jboss-amq-63:1.3"},"lastTriggeredImage":"registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentConfig":"broker-amq"},"template":{"metadata":{"name":"broker-amq","creationTimestamp":null,"labels":{"application":"broker","deploymentConfig":"broker-amq"}},"spec":{"volumes":[{"name":"broker-amq-pvol","emptyDir":{}}],"containers":[{"name":"broker-amq","image":"registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db","ports":[{"name":"jolokia","containerPort":8778,"protocol":"TCP"},{"name":"amqp","containerPort":5672,"protocol":"TCP"},{"name":"mqtt","containerPort":1883,"protocol":"TCP"},{"name":"stomp","containerPort":61613,"protocol":"TCP"},{"name":"tcp","containerPort":61616,"protocol":"TCP"}],"env":[{"name":"AMQ_USER","value":"admin"},{"name":"AMQ_PASSWORD","value":"change12_me"},{"name":"AMQ_TRANSPORTS","value":"openwire, mqtt"},{"name":"AMQ_QUEUES","value":"message.to.rules, message.to.datacenter"},{"name":"AMQ_TOPICS"},{"name":"MQ_SERIALIZABLE_PACKAGES"},{"name":"AMQ_SPLIT","value":"true"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"dns"},{"name":"AMQ_MESH_SERVICE_NAME","value":"broker-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"1 gb"},{"name":"AMQ_QUEUE_MEMORY_LIMIT"}],"resources":{},"volumeMounts":[{"name":"broker-amq-pvol","mountPath":"/opt/amq/data"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":60,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-05-21T14:03:07Z","lastTransitionTime":"2018-05-21T14:03:07Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: amq63-persistent
      application: broker
      openshift.io/deployment-config.name: broker-amq
      template: amq63-persistent
      xpaas: 1.4.8
    name: broker-amq-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: broker-amq
      uid: b0131396-5cff-11e8-bf27-000d3a189887
  spec:
    replicas: 1
    selector:
      deployment: broker-amq-1
      deploymentConfig: broker-amq
      deploymentconfig: broker-amq
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: broker-amq
          openshift.io/deployment.name: broker-amq-1
        creationTimestamp: null
        labels:
          application: broker
          deployment: broker-amq-1
          deploymentConfig: broker-amq
          deploymentconfig: broker-amq
      spec:
        containers:
        - env:
          - name: AMQ_USER
            value: admin
          - name: AMQ_PASSWORD
            value: change12_me
          - name: AMQ_TRANSPORTS
            value: openwire, mqtt
          - name: AMQ_QUEUES
            value: message.to.rules, message.to.datacenter
          - name: AMQ_TOPICS
          - name: MQ_SERIALIZABLE_PACKAGES
          - name: AMQ_SPLIT
            value: "true"
          - name: AMQ_MESH_DISCOVERY_TYPE
            value: dns
          - name: AMQ_MESH_SERVICE_NAME
            value: broker-amq-mesh
          - name: AMQ_MESH_SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: AMQ_STORAGE_USAGE_LIMIT
            value: 1 gb
          - name: AMQ_QUEUE_MEMORY_LIMIT
          image: registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db
          imagePullPolicy: Always
          name: broker-amq
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 1883
            name: mqtt
            protocol: TCP
          - containerPort: 61613
            name: stomp
            protocol: TCP
          - containerPort: 61616
            name: tcp
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/amq/bin/readinessProbe.sh
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/amq/data
            name: broker-amq-pvol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: broker-amq-pvol
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-05-21 14:03:25 +0000 UTC
      openshift.io/deployer-pod.created-at: 2018-05-21 14:03:09 +0000 UTC
      openshift.io/deployer-pod.name: broker-drainer-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: broker-drainer
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"broker-drainer","namespace":"iot-testing","selfLink":"/apis/apps.openshift.io/v1/namespaces/iot-testing/deploymentconfigs/broker-drainer","uid":"b014c024-5cff-11e8-bf27-000d3a189887","resourceVersion":"112408","generation":2,"creationTimestamp":"2018-05-21T14:03:07Z","labels":{"app":"amq63-persistent","application":"broker","template":"amq63-persistent","xpaas":"1.4.8"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["broker-drainer"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"jboss-amq-63:1.3"},"lastTriggeredImage":"registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentConfig":"broker-drainer"},"template":{"metadata":{"name":"broker-drainer","creationTimestamp":null,"labels":{"application":"broker","deploymentConfig":"broker-drainer"}},"spec":{"volumes":[{"name":"broker-amq-pvol","emptyDir":{}}],"containers":[{"name":"broker-drainer","image":"registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db","command":["/opt/amq/bin/drain.sh"],"ports":[{"name":"jolokia","containerPort":8778,"protocol":"TCP"},{"name":"tcp","containerPort":61616,"protocol":"TCP"}],"env":[{"name":"AMQ_USER","value":"admin"},{"name":"AMQ_PASSWORD","value":"change12_me"},{"name":"AMQ_MESH_SERVICE_NAME","value":"broker-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}}],"resources":{},"volumeMounts":[{"name":"broker-amq-pvol","mountPath":"/opt/amq/data"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":60,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-05-21T14:03:07Z","lastTransitionTime":"2018-05-21T14:03:07Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: amq63-persistent
      application: broker
      openshift.io/deployment-config.name: broker-drainer
      template: amq63-persistent
      xpaas: 1.4.8
    name: broker-drainer-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: broker-drainer
      uid: b014c024-5cff-11e8-bf27-000d3a189887
  spec:
    replicas: 1
    selector:
      deployment: broker-drainer-1
      deploymentConfig: broker-drainer
      deploymentconfig: broker-drainer
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: broker-drainer
          openshift.io/deployment.name: broker-drainer-1
        creationTimestamp: null
        labels:
          application: broker
          deployment: broker-drainer-1
          deploymentConfig: broker-drainer
          deploymentconfig: broker-drainer
      spec:
        containers:
        - command:
          - /opt/amq/bin/drain.sh
          env:
          - name: AMQ_USER
            value: admin
          - name: AMQ_PASSWORD
            value: change12_me
          - name: AMQ_MESH_SERVICE_NAME
            value: broker-amq-mesh
          - name: AMQ_MESH_SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.access.redhat.com/jboss-amq-6/amq63-openshift@sha256:921ba8088efd41bd9c591c7ba45ef7d67dca603a5632e5a5ea4a9c2af67617db
          imagePullPolicy: Always
          name: broker-drainer
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 61616
            name: tcp
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/amq/data
            name: broker-amq-pvol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: broker-amq-pvol
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-05-21 16:21:40 +0000 UTC
      openshift.io/deployer-pod.created-at: 2018-05-21 16:21:36 +0000 UTC
      openshift.io/deployer-pod.name: businessrules-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: businessrules
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"businessrules","namespace":"iot-testing","selfLink":"/apis/apps.openshift.io/v1/namespaces/iot-testing/deploymentconfigs/businessrules","uid":"b0161180-5cff-11e8-bf27-000d3a189887","resourceVersion":"129168","generation":2,"creationTimestamp":"2018-05-21T14:03:07Z","labels":{"app":"businessrules"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["businessrules"],"from":{"kind":"ImageStreamTag","namespace":"iot-testing","name":"businessrules:latest"},"lastTriggeredImage":"172.30.1.1:5000/iot-testing/businessrules@sha256:96c3d3b5481b28093127353a36104451ded3f57702a0e969f121c1f2dd4bbcb8"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"businessrules"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"businessrules","deploymentconfig":"businessrules"}},"spec":{"containers":[{"name":"businessrules","image":"172.30.1.1:5000/iot-testing/businessrules@sha256:96c3d3b5481b28093127353a36104451ded3f57702a0e969f121c1f2dd4bbcb8","ports":[{"containerPort":8080,"protocol":"TCP"},{"containerPort":8443,"protocol":"TCP"},{"containerPort":8778,"protocol":"TCP"}],"env":[{"name":"JAVA_APP_JAR","value":"rules-jar-with-dependencies.jar"},{"name":"SOURCE_AMQ_BROKER","value":"tcp://broker-amq-mesh:61616"},{"name":"SOURCE_QUEUE","value":"message.to.rules"},{"name":"SOURCE_BROKER_ADMIN_UID","value":"admin"},{"name":"SOURCE_BROKER_ADMIN_PASSWD","value":"change12_me"},{"name":"TARGET_AMQ_BROKER","value":"tcp://broker-amq-mesh:61616"},{"name":"TARGET_QUEUE","value":"message.to.datacenter"},{"name":"TARGET_BROKER_ADMIN_UID","value":"admin"},{"name":"TARGET_BROKER_ADMIN_PASSWD","value":"change12_me"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-05-21T14:03:07Z","lastTransitionTime":"2018-05-21T14:03:07Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: businessrules
      openshift.io/deployment-config.name: businessrules
    name: businessrules-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: businessrules
      uid: b0161180-5cff-11e8-bf27-000d3a189887
  spec:
    replicas: 1
    selector:
      deployment: businessrules-1
      deploymentconfig: businessrules
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: businessrules
          openshift.io/deployment.name: businessrules-1
        creationTimestamp: null
        labels:
          app: businessrules
          deployment: businessrules-1
          deploymentconfig: businessrules
      spec:
        containers:
        - env:
          - name: JAVA_APP_JAR
            value: rules-jar-with-dependencies.jar
          - name: SOURCE_AMQ_BROKER
            value: tcp://broker-amq-mesh:61616
          - name: SOURCE_QUEUE
            value: message.to.rules
          - name: SOURCE_BROKER_ADMIN_UID
            value: admin
          - name: SOURCE_BROKER_ADMIN_PASSWD
            value: change12_me
          - name: TARGET_AMQ_BROKER
            value: tcp://broker-amq-mesh:61616
          - name: TARGET_QUEUE
            value: message.to.datacenter
          - name: TARGET_BROKER_ADMIN_UID
            value: admin
          - name: TARGET_BROKER_ADMIN_PASSWD
            value: change12_me
          image: 172.30.1.1:5000/iot-testing/businessrules@sha256:96c3d3b5481b28093127353a36104451ded3f57702a0e969f121c1f2dd4bbcb8
          imagePullPolicy: Always
          name: businessrules
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-05-21 16:26:31 +0000 UTC
      openshift.io/deployer-pod.created-at: 2018-05-21 16:26:27 +0000 UTC
      openshift.io/deployer-pod.name: routingservice-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: routingservice
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"routingservice","namespace":"iot-testing","selfLink":"/apis/apps.openshift.io/v1/namespaces/iot-testing/deploymentconfigs/routingservice","uid":"b017cef6-5cff-11e8-bf27-000d3a189887","resourceVersion":"129780","generation":2,"creationTimestamp":"2018-05-21T14:03:07Z","labels":{"app":"routingservice"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["routingservice"],"from":{"kind":"ImageStreamTag","namespace":"iot-testing","name":"routingservice:latest"},"lastTriggeredImage":"172.30.1.1:5000/iot-testing/routingservice@sha256:a0ad043afb73edf7ee7cd1801ddae7a202eac6a36e0ed0847ecd7d9d859097c5"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"routingservice"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"routingservice","deploymentconfig":"routingservice"}},"spec":{"containers":[{"name":"routingservice","image":"172.30.1.1:5000/iot-testing/routingservice@sha256:a0ad043afb73edf7ee7cd1801ddae7a202eac6a36e0ed0847ecd7d9d859097c5","ports":[{"containerPort":8778,"protocol":"TCP"}],"env":[{"name":"SOURCE_AMQ_BROKER","value":"tcp://broker-amq-mesh:61616"},{"name":"SOURCE_BROKER_ADMIN_UID","value":"admin"},{"name":"SOURCE_BROKER_ADMIN_PASSWD","value":"change12_me"},{"name":"BROKER_AMQ_MQTT_HOST","value":"broker-amq-mqtt"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-05-21T14:03:07Z","lastTransitionTime":"2018-05-21T14:03:07Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: routingservice
      openshift.io/deployment-config.name: routingservice
    name: routingservice-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: routingservice
      uid: b017cef6-5cff-11e8-bf27-000d3a189887
  spec:
    replicas: 1
    selector:
      deployment: routingservice-1
      deploymentconfig: routingservice
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: routingservice
          openshift.io/deployment.name: routingservice-1
        creationTimestamp: null
        labels:
          app: routingservice
          deployment: routingservice-1
          deploymentconfig: routingservice
      spec:
        containers:
        - env:
          - name: SOURCE_AMQ_BROKER
            value: tcp://broker-amq-mesh:61616
          - name: SOURCE_BROKER_ADMIN_UID
            value: admin
          - name: SOURCE_BROKER_ADMIN_PASSWD
            value: change12_me
          - name: BROKER_AMQ_MQTT_HOST
            value: broker-amq-mqtt
          image: 172.30.1.1:5000/iot-testing/routingservice@sha256:a0ad043afb73edf7ee7cd1801ddae7a202eac6a36e0ed0847ecd7d9d859097c5
          imagePullPolicy: Always
          name: routingservice
          ports:
          - containerPort: 8778
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-05-21 16:29:28 +0000 UTC
      openshift.io/deployer-pod.created-at: 2018-05-21 16:29:23 +0000 UTC
      openshift.io/deployer-pod.name: software-sensor-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: software-sensor
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"software-sensor","namespace":"iot-testing","selfLink":"/apis/apps.openshift.io/v1/namespaces/iot-testing/deploymentconfigs/software-sensor","uid":"b019313c-5cff-11e8-bf27-000d3a189887","resourceVersion":"130717","generation":2,"creationTimestamp":"2018-05-21T14:03:07Z","labels":{"app":"software-sensor"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["software-sensor"],"from":{"kind":"ImageStreamTag","namespace":"iot-testing","name":"software-sensor:latest"},"lastTriggeredImage":"172.30.1.1:5000/iot-testing/software-sensor@sha256:5cae52a43658e6a18d0e90a76e8c31f8fa63e95d542326b1d5838fa99aaa04a2"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"software-sensor"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"software-sensor","deploymentconfig":"software-sensor"}},"spec":{"containers":[{"name":"software-sensor","image":"172.30.1.1:5000/iot-testing/software-sensor@sha256:5cae52a43658e6a18d0e90a76e8c31f8fa63e95d542326b1d5838fa99aaa04a2","ports":[{"containerPort":8080,"protocol":"TCP"},{"containerPort":8443,"protocol":"TCP"},{"containerPort":8778,"protocol":"TCP"}],"env":[{"name":"deviceType","value":"temperature"},{"name":"deviceID","value":"4711"},{"name":"initialValue","value":"70"},{"name":"count","value":"1000"},{"name":"waitTime","value":"1"},{"name":"receiverURL","value":"broker-amq-mqtt"},{"name":"brokerUID","value":"admin"},{"name":"brokerPassword","value":"change12_me"},{"name":"highWater","value":"800"},{"name":"lowWater","value":"200"},{"name":"JAVA_OPTIONS","value":"-DhighWater=800 -DlowWater=200 -DbrokerUID=admin -DbrokerPassword=change12_me -DreceiverURL=broker-amq-mqtt -DdeviceType=temperature -DdeviceID=4711 -DinitialValue=70 -Dcount=1000 -DwaitTime=1"},{"name":"JAVA_APP_JAR","value":"softwareSensor-jar-with-dependencies.jar"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-05-21T14:03:07Z","lastTransitionTime":"2018-05-21T14:03:07Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: software-sensor
      openshift.io/deployment-config.name: software-sensor
    name: software-sensor-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: software-sensor
      uid: b019313c-5cff-11e8-bf27-000d3a189887
  spec:
    replicas: 1
    selector:
      deployment: software-sensor-1
      deploymentconfig: software-sensor
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: software-sensor
          openshift.io/deployment.name: software-sensor-1
        creationTimestamp: null
        labels:
          app: software-sensor
          deployment: software-sensor-1
          deploymentconfig: software-sensor
      spec:
        containers:
        - env:
          - name: deviceType
            value: temperature
          - name: deviceID
            value: "4711"
          - name: initialValue
            value: "70"
          - name: count
            value: "1000"
          - name: waitTime
            value: "1"
          - name: receiverURL
            value: broker-amq-mqtt
          - name: brokerUID
            value: admin
          - name: brokerPassword
            value: change12_me
          - name: highWater
            value: "800"
          - name: lowWater
            value: "200"
          - name: JAVA_OPTIONS
            value: -DhighWater=800 -DlowWater=200 -DbrokerUID=admin -DbrokerPassword=change12_me
              -DreceiverURL=broker-amq-mqtt -DdeviceType=temperature -DdeviceID=4711
              -DinitialValue=70 -Dcount=1000 -DwaitTime=1
          - name: JAVA_APP_JAR
            value: softwareSensor-jar-with-dependencies.jar
          image: 172.30.1.1:5000/iot-testing/software-sensor@sha256:5cae52a43658e6a18d0e90a76e8c31f8fa63e95d542326b1d5838fa99aaa04a2
          imagePullPolicy: Always
          name: software-sensor
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's AMQP port.
    creationTimestamp: null
    labels:
      app: amq63-persistent
      application: broker
      template: amq63-persistent
      xpaas: 1.4.8
    name: broker-amq-amqp
  spec:
    ports:
    - port: 5672
      protocol: TCP
      targetPort: 5672
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Supports node discovery for mesh formation.
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    creationTimestamp: null
    labels:
      app: amq63-persistent
      application: broker
      template: amq63-persistent
      xpaas: 1.4.8
    name: broker-amq-mesh
  spec:
    clusterIP: None
    ports:
    - name: mesh
      port: 61616
      protocol: TCP
      targetPort: 61616
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's MQTT port.
    creationTimestamp: null
    labels:
      app: amq63-persistent
      application: broker
      template: amq63-persistent
      xpaas: 1.4.8
    name: broker-amq-mqtt
  spec:
    ports:
    - port: 1883
      protocol: TCP
      targetPort: 1883
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's STOMP port.
    creationTimestamp: null
    labels:
      app: amq63-persistent
      application: broker
      template: amq63-persistent
      xpaas: 1.4.8
    name: broker-amq-stomp
  spec:
    ports:
    - port: 61613
      protocol: TCP
      targetPort: 61613
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's OpenWire port.
      service.alpha.openshift.io/dependencies: '[{"name": "broker-amq-amqp", "kind":
        "Service"},{"name": "broker-amq-mqtt", "kind": "Service"},{"name": "broker-amq-stomp",
        "kind": "Service"}]'
    creationTimestamp: null
    labels:
      app: amq63-persistent
      application: broker
      template: amq63-persistent
      xpaas: 1.4.8
    name: broker-amq-tcp
  spec:
    ports:
    - port: 61616
      protocol: TCP
      targetPort: 61616
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: businessrules
    name: businessrules
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: businessrules
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: routingservice
    name: routingservice
  spec:
    ports:
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      deploymentconfig: routingservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: software-sensor
    name: software-sensor
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: software-sensor
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
